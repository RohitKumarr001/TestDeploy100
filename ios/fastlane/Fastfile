default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure we have required environment variables
    team_id = ENV["TEAM_ID"] || CredentialsManager::AppfileConfig.try_fetch_value(:team_id) || "H8RQNJB8B4"
    
    # Setup code signing
    if ENV["IOS_DIST_SIGNING_KEY"] && !ENV["IOS_DIST_SIGNING_KEY"].empty?
      # Manual signing - certificates already imported by GitHub Actions
      update_code_signing_settings(
        use_automatic_signing: false,
        path: "Runner.xcodeproj",
        team_id: team_id,
        code_sign_identity: "iPhone Distribution"
      )
    else
      # Automatic signing
      update_code_signing_settings(
        use_automatic_signing: true,
        path: "Runner.xcodeproj",
        team_id: team_id
      )
    end

    # Build the app
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: ENV["SCHEME"] || "Runner",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates",
      export_team_id: team_id
    )

    # Setup authentication
    if ENV["APP_STORE_CONNECT_API_KEY_ID"] && !ENV["APP_STORE_CONNECT_API_KEY_ID"].empty?
      # Use App Store Connect API Key
      app_store_connect_api_key(
        key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
        issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER"],
        key_content: ENV["APP_STORE_CONNECT_API_KEY"],
        is_key_content_base64: true
      )
    end
    
    # Upload to TestFlight
    upload_to_testflight(
      username: ENV["APPLE_ID"],
      app_specific_password: ENV["APP_SPECIFIC_PASSWORD"],
      skip_waiting_for_build_processing: true,
      skip_submission: true
    )
  end
end
